# Name of your application. Used to uniquely configure containers.
service: maxiambiental

# Name of the container image.
image: dmarczal/maxiambiental

# Deploy to these servers.
servers:
  web:
    hosts:
      - 68.183.53.225

# Credentials for your image host.
registry:
  username:
    - KAMAL_REGISTRY_USERNAME
  password:
    - KAMAL_REGISTRY_PASSWORD

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    RAILS_ENV: production
    RACK_ENV: production
    RAILS_LOG_TO_STDOUT: true
    RAILS_SERVE_STATIC_FILES: true
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_USER
    - POSTGRES_PASSWORD
    - APP_HOST

# Use a different ssh user than root
ssh:
  user: deployer

# Configure builder setup.
builder:
  dockerfile: Dockerfile.staging
  arch: amd64

proxy:
  ssl: true
  host: staging.maxiambiental.com
  app_port: 3000
  healthcheck:
    path: /up
    interval: 3
    timeout: 30

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:16.0
    host: 68.183.53.225
    env:
      clear:
        POSTGRES_USER: "maxiambiental"
        POSTGRES_DB: 'maxiambiental_production'
      secret:
        - POSTGRES_PASSWORD
        - POSTGRES_USER
    files:
      - config/deploy.db.sql:/docker-entrypoint-initdb.d/setup.sql
    directories:
      - data:/var/lib/postgresql/data

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
# If your app is using the Sprockets gem, ensure it sets `config.assets.manifest`.
# See https://github.com/basecamp/kamal/issues/626 for details
#
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Configure the role used to determine the primary_host. This host takes
# deploy locks, runs health checks during the deploy, and follow logs, etc.
#
# Caution: there's no support for role renaming yet, so be careful to cleanup
#          the previous role on the deployed hosts.
# primary_role: web

# Controls if we abort when see a role with no hosts. Disabling this may be
# useful for more complex deploy configurations.
#
# allow_empty_roles: false